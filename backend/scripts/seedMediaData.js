import { 
  Client, 
  MediaType, 
  MediaTemplate, 
  ClientMediaTemplate,
  sequelize 
} from '../models/index.js';

const seedMediaData = async () => {
  try {
    console.log('üå± Dodawanie danych medi√≥w...');

    // 1. Utw√≥rz typy medi√≥w
    const mediaTypes = await MediaType.bulkCreate([
      { name: 'Ciep≈Ça woda' },
      { name: 'Zimna woda' },
      { name: 'Internet' },
      { name: 'Gaz' },
      { name: 'PrƒÖd' }
    ], { ignoreDuplicates: true });

    console.log(`‚úÖ Utworzono ${mediaTypes.length} typ√≥w medi√≥w`);

    // 2. Utw√≥rz szablony oblicze≈Ñ
    const templates = await MediaTemplate.bulkCreate([
      {
        media_type_id: mediaTypes[0].id, // Ciep≈Ça woda
        formula: '({current} - {previous}) * 9.99',
        variables_json: JSON.stringify(['current', 'previous'])
      },
      {
        media_type_id: mediaTypes[1].id, // Zimna woda
        formula: '({current} - {previous}) * 4.50',
        variables_json: JSON.stringify(['current', 'previous'])
      },
      {
        media_type_id: mediaTypes[2].id, // Internet
        formula: '89.99',
        variables_json: JSON.stringify([])
      },
      {
        media_type_id: mediaTypes[3].id, // Gaz
        formula: '({current} - {previous}) * 2.85',
        variables_json: JSON.stringify(['current', 'previous'])
      },
      {
        media_type_id: mediaTypes[4].id, // PrƒÖd
        formula: '({current} - {previous}) * 0.75',
        variables_json: JSON.stringify(['current', 'previous'])
      }
    ], { ignoreDuplicates: true });

    console.log(`‚úÖ Utworzono ${templates.length} szablon√≥w oblicze≈Ñ`);

    // 3. Pobierz wszystkich klient√≥w
    const clients = await Client.findAll();
    console.log(`üìã Znaleziono ${clients.length} klient√≥w`);

    // 4. Przypisz szablony do klient√≥w
    const clientTemplates = [];
    
    for (const client of clients) {
      // Ka≈ºdy klient dostaje internet (sta≈Ça op≈Çata)
      clientTemplates.push({
        client_id: client.id,
        media_template_id: templates[2].id, // Internet
        label: `Internet - ${client.name}`,
        active: true
      });

      // Dodaj ciep≈ÇƒÖ wodƒô dla pierwszych 2 klient√≥w
      if (client.id <= 2) {
        clientTemplates.push({
          client_id: client.id,
          media_template_id: templates[0].id, // Ciep≈Ça woda
          label: `Ciep≈Ça woda - ${client.name}`,
          active: true
        });
      }

      // Dodaj zimnƒÖ wodƒô dla wszystkich
      clientTemplates.push({
        client_id: client.id,
        media_template_id: templates[1].id, // Zimna woda
        label: `Zimna woda - ${client.name}`,
        active: true
      });
    }

    await ClientMediaTemplate.bulkCreate(clientTemplates, { ignoreDuplicates: true });
    console.log(`‚úÖ Przypisano ${clientTemplates.length} szablon√≥w do klient√≥w`);

    console.log('üéâ Dane medi√≥w zosta≈Çy pomy≈õlnie dodane!');
    
    // Poka≈º podsumowanie
    console.log('\nüìä Podsumowanie:');
    console.log(`- Typy medi√≥w: ${mediaTypes.length}`);
    console.log(`- Szablony: ${templates.length}`);
    console.log(`- Przypisania: ${clientTemplates.length}`);
    console.log(`- Klienci: ${clients.length}`);

  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd podczas dodawania danych medi√≥w:', error);
  } finally {
    await sequelize.close();
  }
};

seedMediaData(); 